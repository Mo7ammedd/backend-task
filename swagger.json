{
    "openapi": "3.0.0",
    "info": {
        "title": "My Task API",
        "description": "A comprehensive task management API with authentication, todo operations, and file upload capabilities",
        "version": "1.0.0",
        "contact": {
            "name": "API Support",
            "email": "support@mytaskapi.com"
        }
    },
    "servers": [
        {
            "url": "http://localhost:5000",
            "description": "Development server"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "User": {
                "type": "object",
                "required": [ "phone", "password", "displayName", "experienceYears", "address", "level" ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "User unique identifier"
                    },
                    "phone": {
                        "type": "string",
                        "description": "User phone number (unique)"
                    },
                    "password": {
                        "type": "string",
                        "description": "User password",
                        "writeOnly": true
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User display name"
                    },
                    "experienceYears": {
                        "type": "integer",
                        "description": "Years of experience"
                    },
                    "address": {
                        "type": "string",
                        "description": "User address"
                    },
                    "level": {
                        "type": "string",
                        "enum": [ "fresh", "junior", "midLevel", "senior" ],
                        "description": "User experience level"
                    }
                }
            },
            "Todo": {
                "type": "object",
                "required": [ "image", "title", "desc", "priority", "dueDate" ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Todo unique identifier"
                    },
                    "image": {
                        "type": "string",
                        "description": "Todo image URL"
                    },
                    "title": {
                        "type": "string",
                        "description": "Todo title"
                    },
                    "desc": {
                        "type": "string",
                        "description": "Todo description"
                    },
                    "priority": {
                        "type": "string",
                        "enum": [ "low", "medium", "high" ],
                        "default": "low",
                        "description": "Todo priority level"
                    },
                    "status": {
                        "type": "string",
                        "enum": [ "waiting", "in-progress", "completed" ],
                        "default": "waiting",
                        "description": "Todo status"
                    },
                    "dueDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Todo due date"
                    },
                    "user": {
                        "type": "string",
                        "description": "User ID who owns this todo"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Todo creation timestamp"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Todo last update timestamp"
                    }
                }
            },
            "AuthResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "user": {
                                "$ref": "#/components/schemas/User"
                            },
                            "accessToken": {
                                "type": "string",
                                "description": "JWT access token"
                            },
                            "refreshToken": {
                                "type": "string",
                                "description": "JWT refresh token"
                            }
                        }
                    }
                }
            },
            "TodoResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "data": {
                        "$ref": "#/components/schemas/Todo"
                    }
                }
            },
            "TodoListResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "results": {
                        "type": "integer",
                        "description": "Number of todos returned"
                    },
                    "pagination": {
                        "type": "object",
                        "properties": {
                            "currentPage": {
                                "type": "integer"
                            },
                            "totalPages": {
                                "type": "integer"
                            },
                            "total": {
                                "type": "integer"
                            },
                            "limit": {
                                "type": "integer"
                            }
                        }
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Todo"
                        }
                    }
                }
            },
            "UploadResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "success"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "imageUrl": {
                                "type": "string",
                                "description": "URL of the uploaded image"
                            }
                        }
                    }
                }
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "error"
                    },
                    "message": {
                        "type": "string",
                        "description": "Error message"
                    },
                    "statusCode": {
                        "type": "integer",
                        "description": "HTTP status code"
                    },
                    "stack": {
                        "type": "string",
                        "description": "Error stack trace (development only)"
                    }
                }
            }
        }
    },
    "paths": {
        "/": {
            "get": {
                "summary": "API Welcome Message",
                "description": "Returns a welcome message for the API",
                "tags": [ "General" ],
                "responses": {
                    "200": {
                        "description": "Welcome message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Welcome to My Task API"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "summary": "Register a new user",
                "description": "Create a new user account",
                "tags": [ "Authentication" ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [ "phone", "password", "displayName", "experienceYears", "address", "level" ],
                                "properties": {
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "displayName": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "experienceYears": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St, City"
                                    },
                                    "level": {
                                        "type": "string",
                                        "enum": [ "fresh", "junior", "midLevel", "senior" ],
                                        "example": "midLevel"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "summary": "Login user",
                "description": "Authenticate user and get access tokens",
                "tags": [ "Authentication" ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [ "phone", "password" ],
                                "properties": {
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "summary": "Logout user",
                "description": "Invalidate refresh token",
                "tags": [ "Authentication" ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [ "token" ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "description": "Refresh token to invalidate"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/refresh-token": {
            "get": {
                "summary": "Refresh access token",
                "description": "Get new access token using refresh token",
                "tags": [ "Authentication" ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Refresh token"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "accessToken": {
                                                    "type": "string"
                                                },
                                                "refreshToken": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid or expired refresh token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/profile": {
            "get": {
                "summary": "Get user profile",
                "description": "Get current user's profile information",
                "tags": [ "Authentication" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/todos": {
            "get": {
                "summary": "Get all todos",
                "description": "Get paginated list of user's todos",
                "tags": [ "Todos" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        },
                        "description": "Page number"
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "schema": {
                            "type": "integer",
                            "default": 10
                        },
                        "description": "Number of items per page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Todos retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TodoListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new todo",
                "description": "Create a new todo item",
                "tags": [ "Todos" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [ "image", "title", "desc", "priority", "dueDate" ],
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "example": "http://localhost:5000/uploads/images/image-123456789.jpg"
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Complete project documentation"
                                    },
                                    "desc": {
                                        "type": "string",
                                        "example": "Write comprehensive documentation for the project"
                                    },
                                    "priority": {
                                        "type": "string",
                                        "enum": [ "low", "medium", "high" ],
                                        "example": "high"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [ "waiting", "in-progress", "completed" ],
                                        "example": "waiting"
                                    },
                                    "dueDate": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2025-06-01T10:00:00.000Z"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Todo created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TodoResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/todos/{id}": {
            "get": {
                "summary": "Get todo by ID",
                "description": "Get a specific todo by its ID",
                "tags": [ "Todos" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Todo ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Todo retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TodoResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Todo not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update todo",
                "description": "Update a specific todo",
                "tags": [ "Todos" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Todo ID"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "image": {
                                        "type": "string"
                                    },
                                    "title": {
                                        "type": "string"
                                    },
                                    "desc": {
                                        "type": "string"
                                    },
                                    "priority": {
                                        "type": "string",
                                        "enum": [ "low", "medium", "high" ]
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [ "waiting", "in-progress", "completed" ]
                                    },
                                    "dueDate": {
                                        "type": "string",
                                        "format": "date-time"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Todo updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TodoResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Todo not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete todo",
                "description": "Delete a specific todo",
                "tags": [ "Todos" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Todo ID"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Todo deleted successfully"
                    },
                    "404": {
                        "description": "Todo not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/image": {
            "post": {
                "summary": "Upload image",
                "description": "Upload an image file",
                "tags": [ "Upload" ],
                "security": [
                    {
                        "bearerAuth": [ ]
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "image": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "Image file to upload (JPEG, JPG, PNG, GIF, WEBP)"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Image uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid file type or size",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "General",
            "description": "General API endpoints"
        },
        {
            "name": "Authentication",
            "description": "User authentication and authorization"
        },
        {
            "name": "Todos",
            "description": "Todo management operations"
        },
        {
            "name": "Upload",
            "description": "File upload operations"
        }
    ]
}
